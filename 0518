
   
      WITH ABC( EMP_ID ,FIRST_NAME , START_DATE, END_DATE,DEPARTMENT_ID)
   AS 
    (
     SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.HIRE_DATE, NULL, E.DEPARTMENT_ID
   FROM EMPLOYEES E
   UNION
   SELECT JH.EMPLOYEE_ID, E.FIRST_NAME, JH.START_DATE, JH.END_DATE, JH.DEPARTMENT_ID
   FROM JOB_HISTORY JH, EMPLOYEES E
   WHERE E.EMPLOYEE_ID = JH.EMPLOYEE_ID
     )
     SELECT EMP_ID ,FIRST_NAME , START_DATE, 
     CASE
        WHEN END_DATE IS NULL THEN '재직중'
        ELSE    TO_CHAR(END_DATE)
       END "현재근무/사퇴날짜"  ,
       D.DEPARTMENT_NAME
       
     FROM ABC A , DEPARTMENTS D
     WHERE A.DEPARTMENT_ID = D.DEPARTMENT_ID
     ORDER BY A.EMP_ID, START_DATE;
     
     ======================================================================================
     
     DDL (DATA DEFINITION LANGUAGE 데이터 정의어)
데이터구조나 객체들 생성, 수정, 삭제

CREATE : 구조(SCHEMA) 생성
ALTER  : 스키마 변경
DROP   : 스키마 제거

가상 컬럼 테이블 생성하기 

데이터 타입
C1 CHAR(6) <- 'A'
무조건 6BYTE확보

LENGTH(C1) -> 
ABBBBB : B공백
'A      '

C2 VARCHAR2(6) <-'6'
'A'
LENGTH(C2) -> 1


--조회
SELECT * FROM EMP;
--테이블 삭제
DROP TABLE EMP;
--테이블 컬럼 삭제
DELETE FROM EMP WHERE EMPLOYEE_ID = 101;
--테이블 데이터 삽입


--테이블을 만드는 방법 

1.기존테이블을 복사한다
    (1) 구조 + 데이터 함께 복사한다  //제약조건은 포함하지 않음
    CREATE TABLE EMP
    AS
    SELECT * FROM EMPLOYEES;
    (2) 일부컬럼만 복사하여 만듬
    CREATE TABLE EMP
    AS
    SELECT EMPLOYEE_ID,FIRST_NAME
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID BETWEEN 60 AND 120;
    (3) 구조만 복사 ( 데이터제외) 
    CREATE TABLE EMP
    AS 
    SELECT *
    FROM EMPLOYEES
    WHERE 1=2;

2.새로만든다

회원 : MEMBER  
번호 MEMID  숫자(7) 필수입력  기본키 
이름 MEMNAME 문자(30) 필수입력
이메일 EMAIL  문자(30) 필수입력
전화 TEL 문자 (10) 
포인트 POINT 숫자 (7) 기본값 1000
가입일 REGDATE  날짜  기본값 오늘
  
  DROP TABLE MEMBER;
  
   CREATE TABLE MEMBER (
   MEMID NUMBER(7) NOT NULL PRIMARY KEY,
   MEMNAME VARCHAR(30) NOT NULL,
   EMAIL VARCHAR(30) UNIQUE,
   TEL VARCHAR(30) ,
   POINT NUMBER(7) DEFAULT 1000,
   REGDATE DATE DEFAULT SYSDATE
   );
       
   SELECT*FROM MEMBER;
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL,POINT,REGDATE)
   VALUES(1, '지은' , 'JH@NAVER.COM' , NULL, 1000, SYSDATE );
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL,POINT,REGDATE)
   VALUES(2, '태화' , 'TH@NAVER.COM' , '010-1111-1234', 1000, SYSDATE );
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL)
   VALUES(3, '가나' , 'KN@NAVER.COM' , '010-2222-2345');
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL)
   VALUES(4, '은영' , 'EN@NAVER.COM' , '010-2222-2345');

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY/MM/DD HH24:MI:SS';
   
UPDATE MEMBER SET REGDATE = TO_DATE('2020/05/15') WHERE MEMID='1' ;
UPDATE MEMBER SET REGDATE = TO_DATE('2020/05/15') WHERE MEMID='2' ;
UPDATE MEMBER SET REGDATE = TO_DATE('2020/05/15') WHERE MEMID='3' ;
UPDATE MEMBER SET REGDATE = TO_DATE('2020/05/15') WHERE MEMID='4' ;
      
COMMIT;
   
   --게시판
글번호     숫자(7)   필수입력    기본키
글제목     문자(120) 필수입력    
내용      문자(4000)
글쓴이     문자(7)   MEMBER의 MEMID를 참조한다(참조)
조회수     숫자(7)   기본값 0
글쓴날     날짜      기본값 오늘
좋아요     숫자(7)   범위 0 이상

CREATE TABLE BOARD
(
    BRDID   NUMBER(7)  NOT NULL
    , TITLE VARCHAR2(120) NOT NULL
    , CONTENT VARCHAR2(4000)
    , MEMID NUMBER(7)
    --혹은 , MEMID NUMBER(7)  REFERENCES MEMBER(MEMID) --외래키 
    --혹은 , MEMID NUMBER(7)  REFERENCES MEMBER(MEMID) --외래키 
    , HIT NUMBER(7) DEFAULT 0
    ,WDATE DATE DEFAULT SYSDATE
    ,GOOD NUMBER(7) CHECK (GOOD>=0)
    --중요한게 PRIMIRY KEY 이렇게 해도 되는데 만약 기본키를 2개이상 지정할 경우(복합키) 문법적으로 오류가 발생하니
    --아래에서 이렇게 제약조건을 넣어줘야한다.
    ,CONSTRAINT PK_BRDID PRIMARY KEY (BRDID,MEMID)
    ,CONSTRAINT FK_MEMID FOREIGN KEY (MEMID) 
    REFERENCES MEMBER(MEMID) --외래키 
   );
   
   DELETE FROM MEMBER;
   --BOARD 테이블에 REFERENCES MEMBER(MEMID) 의 뜻은 부모의 MEMBER테이블의 MEMID를 참조한다.
   -- 부모의 키가 없어서 아래의 게시글 추가가 될수 없다.
   COMMIT;
   SELECT * FROM MEMBER;
   SELECT * FROM BOARD;
   
   --게시글 추가
   INSERT INTO BOARD ( BRDID,TITLE,CONTENT,MEMID,HIT,WDATE,GOOD)
   VALUES (1, '새로운 글' ,'내용없음',1,0,SYSDATE,0);
   
    INSERT INTO BOARD ( BRDID,TITLE,CONTENT,MEMID,GOOD)
   VALUES (2, '새로운 글2' ,'내용없음',1,0);
   
   --'지은'이가 쓴 글의 목록 출력
   
   SELECT *
   FROM BOARD B, MEMBER M
   WHERE M.MEMID = B.MEMID
   ;
   COMMIT;
   
   --'지은'이 탈퇴 : 
   DELETE FROM MEMBER
   WHERE MEMID=1;
   --ORA-02292: integrity constraint (HR.FK_MEMID) violated - child record found
   --외래키의 능력 || 자식레코드에 '지은'이 있으므로 삭제 불가능
   --먼저 자식레코드에서 쓴 글을 지우고 '지은'멤버를 삭제가능
   
   --그래서 한번에 다 지울수 있는 방법이 ON DELETE CASCADE..(굉장히 위험한 ..)
   
   
   DROP TABLE BOARD;
   
   
   
   
   5/18


CREATE TABLE MEMBER (
   MEMID NUMBER(7) NOT NULL PRIMARY KEY,
   MEMNAME VARCHAR(30) NOT NULL,
   EMAIL VARCHAR(30) UNIQUE,
   TEL VARCHAR(30) ,
   POINT NUMBER(7) DEFAULT 1000,
   REGDATE DATE DEFAULT SYSDATE
   );
   
   CREATE TABLE BOARD
(
    BRDID   NUMBER(7)  NOT NULL
    , TITLE VARCHAR2(120) NOT NULL
    , CONTENT VARCHAR2(4000)
    , MEMID NUMBER(7)
    --혹은 , MEMID NUMBER(7)  REFERENCES MEMBER(MEMID) --외래키 
    --혹은 , MEMID NUMBER(7)  REFERENCES MEMBER(MEMID) --외래키 
    , HIT NUMBER(7) DEFAULT 0
    ,WDATE DATE DEFAULT SYSDATE
    ,GOOD NUMBER(7) CHECK (GOOD>=0)
    --중요한게 PRIMIRY KEY 이렇게 해도 되는데 만약 기본키를 2개이상 지정할 경우(복합키) 문법적으로 오류가 발생하니
    --아래에서 이렇게 제약조건을 넣어줘야한다.
    ,CONSTRAINT PK_BRDID PRIMARY KEY (BRDID,MEMID)
    ,CONSTRAINT FK_MEMID FOREIGN KEY (MEMID) 
    REFERENCES MEMBER(MEMID) --외래키 
   );
       
   SELECT*FROM MEMBER;
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL,POINT,REGDATE)
   VALUES(1, '지은' , 'JH@NAVER.COM' , NULL, 1000, SYSDATE );
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL,POINT,REGDATE)
   VALUES(2, '태화' , 'TH@NAVER.COM' , '010-1111-1234', 1000, SYSDATE );
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL)
   VALUES(3, '가나' , 'KN@NAVER.COM' , '010-2222-2345');
   
   INSERT INTO MEMBER( MEMID,MEMNAME,EMAIL,TEL)
   VALUES(4, '은영' , 'EN@NAVER.COM' , '010-2222-2345');
   
   

복합키는 P가 2개인경우 - 각각은 다른값이 될수는 있지만 같이 묶어서 비교를 하면 같은 값이 나오면 안된다
한 테이블에 2가지의 PRIMARY KEY가 올수 없으니깐 아래에서 제약조건을 달아준다.
CREATE TABLE JON_HISTORY 
( -
    EMPLOYEE_ID NUMBER()
    ,START_DATE DATE
    ,CONSTRAINT EMPID_STDATE_PK
    PRIMARY KEY(EMPLOYEE_ID,START_DATE)
    ,CONSTRAINT EMPID_FK FOREIGN KEY(EMPLOYEE_ID)
    REFERENCES EMPLOYEES (EMPLOYEE_ID)
)

 데이터추가 
 : 새로운 ROW() =레코드(한 줄)가 추가된다. 
1) 한 줄 추가 
    INSERT INTO 테이블명 (컬렴명1, 컬럼명2 ) VALUES (값1, 값2)
    
    CREATE TABLE MEMBER2 (
   MEMID NUMBER(7)PRIMARY KEY,
   MNAME VARCHAR2(30) NOT NULL,
   EMAIL VARCHAR2(320) ,
   TEL VARCHAR2(20) ,
   POINT NUMBER(7) DEFAULT 1000,
   REGDATE DATE DEFAULT SYSDATE
   );
   
   DELETE FROM MEMBER2;
   이건 안되는것... 
   INSERT INTO MEMBER2 (MEMID,MNAME, EMAIL, TEL)
    VALUES ( (SELECT MAX(MEMID)+1 FROM MEMBER2),'지은','JY@NAVER.COM','010-2323-5643');
    그래서 이거를 하는데 이거를 왜하는거지? 방대한 양일때 MAX +1 을 해줘서 간단하게 값을 넣어준다.
    INSERT INTO MEMBER2 (MEMID,MNAME, EMAIL, TEL)
    VALUES ( (SELECT NVL(MAX(MEMID),0)+1 FROM MEMBER2),'지은','JY@NAVER.COM','010-2323-5643');
    
    SELECT * FROM MEMBER2;
    
2) 여러 줄 추가
    
    INSERT INTO 테이블1 (컬럼명1, 컬럼명2 ...) SELECT 컬럼1, 컬럼2 FORM 다른테이블1 WHERE 조건
    
    INSERT INTO MEMBER2
    SELECT *
    FROM MEMBER M1 
    WHERE M1.MEMID>1;

 데이터 삭제 : 줄(ROW)을 삭제, 여러줄을 대상으로 한다.
1)줄(ROW)을 대상으로 삭제
    DELETE FROM 테이블
    WHERE 조건 
 2)데이터 전체 삭제
    DELETE FROM 테이블    
    
 데이터 수정
 UPDATE 테이블
 SET 컬럼1 = 값1,
    컬럼2 = 값2,
 WHERE 조건
 
 --WHERE 이 매우 중요하다. 없으면 모든 값이 다 바뀌어버린다.
 UPDATE MEMBER2
  SET  EMAIL = 'JH@NATE.COM'
 , TEL ='010-5555-2222';
 
 UPDATE MEMBER2
  SET  EMAIL = 'JH@NATE.COM'
 , TEL ='010-5555-2222';
  WHERE MEMID =2;
  
  - primary key도 수정가능하다 
 UPDATE MEMBER2
 set memid = 5
  WHERE MEMID =2;
 하지만 MEMBER테이블은 수정이 안된다. 왜냐하면 MEMBER의 외래키의 제약조건이 위배안된다면 수정이 가능하다.
 MEMBER 테이블에 MEMID1을 다른곳에서 사용하고 있으면 안됌 
  UPDATE MEMBER
  SET MEMID = 1
  WHERE MEMID =6;
  
  COMMIT;
  
 SELECT * FROM BOARD;
 SELECT * FROM MEMBER;
 SELECT * FROM MEMBER2;
 
 desc member2;
 ROLLBACK; --업데이트 하기 전까지 
 졸업생의 경우 데이터를 지우는게 아니라 1.그 해당 ROW를 다른테이블을 옮기고 2.휴학,재학 이렇게 나눠서 관리한다.


ALTER : 스키마 구조 변경
 CREATE TABLE MEMBER3
 AS
   SELECT * FROM MEMBER;
   --제약조건 복사 안됌
   
   SELECT * FROM MEMBER3;
   
   1)컬럼 추가(ADD column) : 추가된 컬럼은 null로 입력된다. 
   ALTER TABLE MEMBER3
   ADD ( LOC VARCHAR2(4) );
   1-1) 컬럼 추가 : DEFAULT값을 추가한다. 한 글자에 3바이트 
   ORACLE은 기존의 자료는 다 추가되는데 MS SQL은 기존의 자료는 변경안되고 추가되는것들만 DEFAULT값이 추가된다.
   ALTER TABLE MEMBER3
   ADD ( LOC2 VARCHAR2(6) DEFAULT '부산' );
   
   2)컬럼 이름 변경
   ALTER TABLE MEMBER3
   RENAME COLUMN LOC2 TO AREA;
   
   3)테이블 이름 변경
   RENAME MEMBER2 TO MEM2;
   
   4)컬럼 사이즈 변경
   ALTER TABLE MEMBER3 
   MODIFY (AREA VARCHAR2(20))
   DESC MEMBER3;
   
   5) 컬럼 삭제
   ALTER TABLE MEMBER3
   DROP COLUMN LOC;
   
   ATER TABLE MEMBER3
   DROP COLUMN LOC CASCADE CONSTRAINTS;
   
   6)제약조건 설정 추가하기
   ALTER TABLE MEMBER3
   ADD CONSTRAINT MEM3_UK UNIQUE (EMAIL);
   
   ALTER TABLE MEMBER3
   MODIFY (EMAIL CONSTRAINT MEM3_EMAIL_NN NOT NULL);
   
   ALTER TABLE MEMBER3
   MODIFY (AREA CONSTRAINT MEM3_AREA_NN NOT NULL);
   
   ALTER TABLE MEMBER3
   DROP CONSTRAINT MEM3_EMAIL_NN;
   
   
   
   SELECT * FROM MEMBER3;
  ----------------------- 
  TABLE 데이터 제거 방법
  1) DELETE FROM MEMBER
  모든 행을 한줄씩 삭제합니다. 시간이 오래 걸린다
  2) TRUNCATE TABLE MEMBER3
  구조를 제외한 데이터를 삭제 - 속도가 빠름
  3) DROP TABLE MEMBER3
  테이블 자체를 제거 
   
   
   
   
   
   
   
   
3.IMPORT한다 



