C:\Users\PKNU>sqlplus /nolog
SQL*Plus: Release 11.2.0.2.0 Production on 화 5월 26 16:06:11 2020
Copyright (c) 1982, 2014, Oracle.  All rights reserved.
SQL> conn / as sysdba
Connected.
SQL> show user
USER is "SYS"
SQL> create user jdbctest identified by 1234;
User created.
SQL> grant  CONNECT,RESOURCE to jdbctest;
Grant succeeded.
SQL>
-------------------------------------------------------------------;
CREATE TABLE MEMBER
(
     MEMID    VARCHAR2(12)  PRIMARY KEY
    ,MNAME    VARCHAR2(30)  NOT  NULL
    ,EMAIL    VARCHAR2(320)
    ,PASSWD   VARCHAR2(12)
    ,PHONE    VARCHAR2(20)
    ,REGDATE  DATE         DEFAULT SYSDATE
    ,MPOINT   NUMBER(7)    DEFAULT 1000 
);

MEMID
MNAME
EMAIL
PASSWD
PHONE
REGDATE
MPOINT

SELECT   memid, mname, email, passwd, phone, regdate, mpoint
 FROM    member;
 
 INSERT INTO member ( memid, mname, email, passwd, phone)
  VALUES (             :v0,  :v1,    :v2,  :v3,    :v4,  );
  
UPDATE member  SET
        mname = :v1 , email   = :v2, passwd = :v3, 
        phone = :v4,  regdate = :v5, mpoint = v6
 WHERE memid  = :v0
  and  passwd = :v1;

DELETE FROM member
 WHERE memid = :v0 and passwd = :v1;
 
-------------------------------------------------------------
프로시저 (procedure)
--------------------------------------------------------------
CREATE OR REPLACE PROCEDURE  SPADDMEMBER (   
    IN_MEMID   IN    VARCHAR2,
    IN_MNAME   IN    VARCHAR2,
    IN_EMAIL   IN    VARCHAR2, 
    IN_PASSWD  IN    VARCHAR2, 
    IN_PHONE   IN    VARCHAR2
)
IS
  BEGIN
    INSERT INTO MEMBER ( MEMID, MNAME, EMAIL, PASSWD, PHONE )
     VALUES ( IN_MEMID, IN_MNAME, IN_EMAIL, IN_PASSWD, IN_PHONE );
    COMMIT;  
  END;
  /

--CALL  SPADDMEMBER( :V0, :V1, :V2, :V3, :V4   )
CALL  SPADDMEMBER( 'sky1', '영효', 
   'yh@naver.com', '1234', '010-1111-1111'   )

select * from member

-------------------------------------------
SPGETMEMBER : 개인조회
-------------------------------------------
CREATE  OR REPLACE  PROCEDURE   SPGETMEMBER  (
    IN_MEMID      IN    MEMBER.MEMID%TYPE,    
    OUT_MEMID     OUT   MEMBER.MEMID%TYPE,    
    OUT_MNAME     OUT   member.mname%TYPE,
    OUT_EMAIL     OUT   member.email%TYPE,
    OUT_PASSWD    OUT   member.passwd%TYPE,
    OUT_PHONE     OUT   member.phone%TYPE,    
    OUT_REGDATE   OUT   VARCHAR2,
    OUT_MPOINT    OUT   member.mpoint%TYPE,
    OUT_MLEVEL    OUT   VARCHAR2
)
IS
  BEGIN
    SELECT  MEMID, MNAME, EMAIL, PASSWD, PHONE, 
            TO_CHAR(REGDATE, 'YYYY-MM-DD HH24:MI:SS DAY') RDATE,
            MPOINT,
            CASE  
              WHEN MPOINT BETWEEN 1000 AND 2999   THEN  '새싹회원'
              WHEN MPOINT BETWEEN 3000 AND 6999   THEN  '떡입회원'
              WHEN MPOINT BETWEEN 7000 AND 20000  THEN  '나무회원'
              WHEN MPOINT >= 20000                THEN  '숲회원'
              ELSE                                      '나뿐회원' 
            END   MLEVEL
            INTO 
              OUT_MEMID, OUT_MNAME,   OUT_EMAIL, OUT_PASSWD,
              OUT_PHONE, OUT_REGDATE, OUT_MPOINT, OUT_MLEVEL
      FROM   MEMBER
      WHERE  MEMID = IN_MEMID;
    EXCEPTION
        WHEN NO_DATA%FOUND THEN OUT_MEMID := 'NO DATA';
        WHEN OTHERS     THEN OUT_MEMUID := 'ERROR:'||SQLERRM;
        
  END;
/  

VAR   V_MEMID    VARCHAR2;
VAR   V_MNAME    VARCHAR2;
VAR   V_EMAIL    VARCHAR2;
VAR   V_PASSWD   VARCHAR2;
VAR   V_PHONE    VARCHAR2;
VAR   V_REGDATE  VARCHAR2;
VAR   V_MLEVEL   VARCHAR2;
VAR   V_MPOINT   VARCHAR2;
EXEC  SPGETMEMBER( 'sky1', :V_MEMID, :V_MNAME, :V_EMAIL, :V_PASSWD, :V_PHONE, :V_REGDATE,:V_MPOINT, :V_MLEVEL );
PRINT  V_MEMID;
PRINT  V_MNAME;
PRINT  V_EMAIL;
print  V_PASSWD;
PRINT  V_PHONE;
PRINT  V_REGDATE;
PRINT  V_MPOINT;
PRINT  V_MLEVEL;

---------------------------------------------
목록 조회 프로시져 작성 
SPGETMEMBERLIST
---------------------------------------------
CREATE  OR REPLACE  PROCEDURE   SPGETMEMBERLIST(
   curMEMBER    OUT    SYS_REFCURSOR   
) 
IS
  BEGIN
    OPEN  curMEMBER  FOR
      SELECT   memid, mname, email, phone, 
               TO_CHAR(regdate, 'YY-MM-DD') REGDATE, 
               CASE  
                  WHEN MPOINT BETWEEN 1000 AND 2999   THEN  '새싹회원'
                  WHEN MPOINT BETWEEN 3000 AND 6999   THEN  '떡입회원'
                  WHEN MPOINT BETWEEN 7000 AND 20000  THEN  '나무회원'
                  WHEN MPOINT >= 20000                THEN  '숲회원'
                  ELSE                                      '나뿐회원' 
               END   MLEVEL
      FROM   MEMBER
      ORDER  BY  MEMID ASC; 
  END;
/  

-- 커서 테스트 memid, mname, email, phone, regdate, mlevel
SET SERVEROUTPUT ON
DECLARE
   v_refcursor    SYS_REFCURSOR;   
   v1             VARCHAR2(4000);
   v2             VARCHAR2(4000);
   v3             VARCHAR2(4000);
   v4             VARCHAR2(4000);
   v5             VARCHAR2(4000);
   v6             VARCHAR2(4000);
BEGIN
   dbms_output.put_line('조회결과');
   spgetmemberlist(v_refcursor);
   LOOP
     FETCH  v_refcursor INTO  v1, v2, v3, v4, v5, v6;
     EXIT WHEN  v_refcursor%NOTFOUND;
     dbms_output.put_line(V1 || ','  || V2);
   END LOOP;
   CLOSE V_REFCURSOR;   
END;
/
-----------------------------------------------
전체 인원수 조회
CREATE  OR  REPLACE   PROCEDURE  SPGETMEMCOUNT (
    OUT_MEMCNT  OUT  NUMBER
)    
IS    
 BEGIN
    SELECT  COUNT(MEMID) INTO OUT_MEMCNT FROM  MEMBER;
 END;
/ 

VAR  V_MEMCNT  NUMBER
EXEC SPGETMEMCOUNT( :V_MEMCNT   )
PRINT  V_MEMCNT



-----------------------------------------------
업데이트 프로시저
-----------------------------------------------
create or replace procedure SPUPDATEMEMBER(
    in_MEMID in MEMBER.MEMID%TYPE,
    in_Email out MEMBER.MEMID%TYPE,
    in_passwd out MEMBER.MEMID%TYPE,
    in_phone out MEMBER.MEMID%TYPE
    )
IS
    BEGIN 
        UPDATE MEMBER set Email 
 
 -----------------------------------------------
삭제 프로시저

EXCEPTION
        WHEN NO_DATA%FOUND THEN OUT_MEMID := 'NO DATA';
        WHEN OTHERS     THEN OUT_MEMUID := 'ERROR:'||SQLERRM;
        
-----------------------------------------------       
create or replace procedure spdelmember(
    in_MEMID IN varchar2
    out_aftcnt out number
)
is
    begin
        delete from member where memid = in_memid;
        
        out_aftcnt := sql%rowcount; --실행된 라인 수를 알려준다. 
    execption 
        when others then
         out_aftcnt := 0;
        end;
        /
        
