0619

로그인폼은 사실 DB에서 처리가 불가능하다. 이유는 암호의 암호화떄문에 처리하기 힘들다.(물론 되기는 하다 )
대부분 자바에서 처리한다. 

------------2교시
배열과 컬렉션의 차이

배열은 처음에 메모리 크기를 할당 해야한다. 또 한가지 타입만 들어갈 수 있다.
컬렉션은 처음에 크기를 할당 안해도 된다. 또 여러가지 타입이 들어갈 수 있다.


데이터베이스의 커서는 = 다른 언어의 반복문이다.. 또 다른의미는 깜박깜박 그 커서 이렇게 동작할 수 있도록 하는게 커서 


-----------------4교시
반복문의 사용이유 : 특정 업무의 반복성을 줄이기 위해서

CPU : 헤르츠는 한번의 진동 1G HRZ = 1000천 
CPU와 메모리와의 통신이 컴퓨터 

그러니깐 TABLE은 그게 하드에 저장되는거고 SELECT를 하면서 메모리에 올려둔다.
메모리에 올려둬야지 컴퓨터가 CPU와 메모리가 통신을 할수 있기 때문에

배열은 메모리에 공간을 만들어놓고 첫번째 두번쨰 세번째 나눠서 저장한다.
배열 , 메모리에 올려놓고 사용할 것인가

데이터를 메모리에 올리는 방법 2가지 1.변수에 저장 2.DB SELECT 날려서 TABLE을 메모리에 올려두는것 


오라클은 엄격하게 배열은 없다. 그냥 유사하니깐 그렇게 부름
만약에 배열이 있다면 Students a [8] {} 이렇게 크기를 정해놓고 써야하지.

테이블을 한개 만들고 row를 여러개 만들어서 거기다가 

자바는 스트링을 8개 선언하면 끝인데 더 넣으면 에러가 난다. 자바스크립트는 만들면 만ㄷㄹ수록 게쏙 늘어남, 이유는 값이 들어갈떄 메모리를 잡는다.
오라클ㅇ느 테이블이니깐 인서트가 막들어감. 처음에 갯수를 안정해도 막들어가는거지 





db배열
이게 테이블이 된다.
하나의 필드를 만들고 VARCHAR2(20)타입으로 만들고 현재에 데이터는없다.


인라인뷰 : SELECT에서 올라오는 메모리 데이터.

뷰 : 인사시스템은 DB를 안알려준다. 근데 쓸수 있는 방법은 많다.
1.특정 권한만 줘서 계정을 파준다.
2.일부 테이블만 권한을 줘서 풀어준다.
3.WAS에서 넣어서 가져오기
4.



제1정규화
테이블을 만들떄 엔터티라는 개념 명확하게 하기
업무프로그램 속에서 엔티티가 되는거 (명세) 
엔터티를어떻게 잘잡을것인가. 어떻게 테이블화 할것인가
제1정규화를 꼭 지켜야한다. 하나의 값이 변동사항이 생긴다고 다른값이 따라 버리게 된다면 그게 엉망진창이 된다. 즉 독립적이여야한다.

테이블 생성시 프라이머리 키 잡을때 이 데이터와 데이터를 구분할수 있는지, 데이터의 최소단우니ㅡㄴ ROW이다.

WHERE 절에 있는 필드값만 쳐다보지말고 그 필드값이 포함되어있는 ROW 로 확인하고 파악하기

2. 제1정규화를 지켜서 테이블 만들면 행위를 찾아라. 
어떤 행위가 발생해야 만들어지는게 데이터인데 ,속성은 필드값으로 만들고 
학과에는 행위는 없다. 그게 엔티티 테이블이다. 행위가 발생하면 (시험을 친다) 그러면 행위가 ROW에 쌓인다. ROW!! 
그런 행위를 쌓아두는게 엔티티 엔티티 + 행위테이블 
제2정규화란 엔티티 엔티티에서 생겨난 행위테이블 행위는 무조건 N (다)
1:다 1:다 가 만들어진다. 
고객이 상품을 산다. 	고객 	상품 => 행위(산다.)  

데이터베이스를 보고 업무를 이해해야한다.  행위테이블보고 

행위테이블에서 따라가다보면 엔티티가 보인다. 

데이터베이스 조인이 복잡한 이유는 업무가 복잡해서, 업무가 복잡하기 떄문에 우리 개발자가 생겨난거고 우리의 목적은 어떻게 관리할 것인가.

업무들중에 공통적인 부분을 코드로 뺀다. 코드값을 빼고 테이블로 만드는게 제 3정규화 

역정규화 : 예를 들면 1:다 1:다 1:다 그러면 끝도 없다. 데이터를 보니 속성으로만 쓸거같은거는 그대로 냅두고 

!!!!!!!!!!!!!!필드를 붙이는게 아니라 ROW를 붙이는거다 ROW!!!!!!!!ROW!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

OR AND 조합도 중요하다. AND는 양쪽의 ROW데이터의 교집합  || OR 는 양쪽 ROW를 UNION !! 

집계함수 : 어짜피 관리자가 원하는건 결론임. 집계,통계를 보여줘야함 . GROUP BY 에 관해서 집중 
GROUP BY 하기전에 어떻게 


인라인뷰에 대한 이해 !! -> 결국은 SELECT한후 그 결과테이블을 메모리에 올라오고 그것도 하나의 가상테이블이다. 그런 가상테이블을 () 를 통해서 이용이 가능하다.

프로시저 : 프로시저에서 중요한것은 절차. 업무의 최소단위이다.하나의 트랜잭션이다. ALL OR NOTING이다. 업무상 최소단위이고 이게 ALL OR NOTTING 이다. 

함수 : 우리가 필요할떄 쓰는 기능이다. 업무가 아니라, 데이터베이스 함수는 어플리케이션에서 불러올수 없다. 


프로시저는 단일 프로시저로 사용하지 않고 패키지 단위로 사용한다. 

패키지안에서 프로시저와 함수를 같이 쓴다.

커서는 시스템 레퍼런스 커서는 걔를 사용해야한 어플리케이션에서 사용할수 있다. OUTPUT PARAMENT로는 값만 OUT시킬수 있다.
커서를 돌려서 값을 찾아서 사용할 수 있다. 생각보다는 커서를 많이 쓴다. 커서를 잘 이해하기 !!

관계형 데이터베이스의 3가지 중요한점 
1.정규화
2.조인
3.데이터베이스의 최소단위는 ROW이다. 


트리거란 : 특정테이블의 이벤트 CRUD 될때 데이터베이스에서 자동으로 동작할수 있게 한것.   BEFORE AFTER이 있다.

트랜잭션이란 어떠한 업무의 최소단위. 
 



------------------------------------------------------------------------------------------------------------------------------



