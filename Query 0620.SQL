--1. 세기 21세기, 20세기

SELECT TO_CHAR(SYSDATE, 'CC') FROM DUAL;

--2.AD,BC
SELECT TO_CHAR(SYSDATE,'AD')FROM DUAL;
SELECT TO_CHAR(SYSDATE,'BC')FROM DUAL;

--3.분기

SELECT TO_CHAR(SYSDATE, 'Q') FROM DUAL;
SELECT TO_CHAR(TO_DATE('2020-03-12'), 'Q') FROM DUAL;

--3.1분기별 입고 현황
SELECT TO_CHAR(W_DATE,'Q'),SUM(Q_QTY) AS TQTY
FROM WAREHOUSING
GROUP BY TO_CHAR(W_DATE,'Q')
;

---4. 시간 분 초 표시
SELECT TO_CHAR(SYSDATE,'YYYY MM DD HH MI SS')FROM DUAL;

---5. 월 -> 영문 
SELECT TO_CHAR(TO_DATE('2020-01-05'),'MONTH') FROM DUAL;

---6. 52주차
SELECT TO_CHAR(SYSDATE,'WW')FROM DUAL;

---7 2020년 주(52주차)별 입고현황

SELECT TO_CHAR(W_DATE,'YYYY')||TO_CHAR(W_DATE,'WW'),SUM(Q_QTY)
FROM WAREHOUSING
GROUP BY TO_CHAR(W_DATE,'YYYY')||TO_CHAR(W_DATE,'WW');

SELECT YYYY||'년도'||TO_NUMBER(WW)||'주차',QTY FROM
(
    SELECT TO_CHAR(W_DATE,'YYYY') AS YYYY
    ,TO_CHAR(W_DATE,'WW') AS WW
    ,SUM(Q_QTY) AS QTY
    FROM WAREHOUSING
    GROUP BY TO_CHAR(W_DATE,'YYYY'),TO_CHAR(W_DATE,'WW')
)
;
-----7.월의 주차
SELECT TO_CHAR(SYSDATE,'W') FROM DUAL;
SELECT TO_CHAR(TO_DATE(SYSDATE),'W') FROM DUAL;   --1월의 마지막주인 31일은 4주차고 2월의 1일은 4주차인가 1주차 인가?
SELECT TO_CHAR(TO_DATE(SYSDATE),'WW')FROM DUAL;

-----1월1일부터 오늘까지의 날짜 
SELECT TO_CHAR(SYSDATE,'DDD')FROM DUAL;

-----월중 일수
SELECT TO_CHAR(SYSDATE,'DD')FROM DUAL;

-----주중 일수
SELECT TO_CHAR(SYSDATE,'D') FROM DUAL; --일요일부터 START 

-----주중 요일표시
SELECT TO_CHAR(SYSDATE,'DY') FROM DUAL;

SELECT TO_CHAR(SYSDATE,'DL')FROM DUAL;

SELECT TO_CHAR(SYSDATE,'DS')FROM DUAL;

-----시간 표시
SELECT TO_CHAR(SYSDATE,'HH')FROM DUAL;
SELECT TO_CHAR(SYSDATE,'HH12')FROM DUAL;
SELECT TO_CHAR(SYSDATE,'HH24')FROM DUAL;

-----년도 
SELECT TO_CHAR(SYSDATE,'Y')FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YY')FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YYY')FROM DUAL;
SELECT TO_CHAR(SYSDATE,'YYYY')FROM DUAL;

------AM PM 
SELECT TO_CHAR(SYSDATE,'AM') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'PM') FROM DUAL;

------초
SELECT TO_CHAR(SYSDATE,'SS') FROM DUAL;
SELECT TO_CHAR(SYSDATE,'SSSSS') FROM DUAL;  --오늘 자정부터 지금까지 흘러간 초 

------월을 로마자로 표시
SELECT TO_CHAR(SYSDATE,'RM')FROM DUAL;

---숫자 자리에 , 표시
SELECT TO_CHAR(5758,'9999,9999') FROM DUAL; ---앞에 공간이 생긴다. 
SELECT TRIM(TO_CHAR(5758,'$9999,9999')) FROM DUAL;

SELECT TRIM(TO_CHAR(5758,'$9999,9999')) FROM DUAL;
SELECT TRIM(TO_CHAR(5758,'c9999,9999')) FROM DUAL;


---ADD_MONTHS
SELECT ADD_MONTHS(SYSDATE,3) FROM DUAL;

---오늘날짜를 기준으로 3개월치 통계를 주별로 
SELECT ADD_MONTHS(SYSDATE,-3) + LEVEL
FROM DUAL
CONNECT BY LEVEL <= 
( 
SELECT SYSDATE- ADD_MONTHS(SYSDATE,-3)
FROM DUAL
);

---
SELECT TO_CHAR(SYSDATE,'YYYY') || TO_CHAR(ADD_MONTHS(SYSDATE,-3)+ LEVEL,'WW')
FROM DUAL
CONNECT BY LEVEL <=
(SYSDATE - ADD_MONTHS(SYSDATE,-3))
;
--------근데 이렇게하면 오른쪽 왼쪽 조인을 해야 결과값을 뽑아낼수 있잖아 다른애들이랑 묶을꺼면 아래처럼 

SELECT WW FROM
(
SELECT TO_CHAR(SYSDATE,'YYYY') || TO_CHAR(ADD_MONTHS(SYSDATE,-3) + LEVEL,'WW') AS WW
FROM DUAL
CONNECT BY LEVEL <=
(SYSDATE - ADD_MONTHS(SYSDATE,-3))
) 
GROUP BY WW
ORDER BY WW ASC 
;
---아래에서 주의해야할것이 만약에 
SELECT * FROM WAREHOUSING;
INSERT INTO WAREHOUSING VALUES('W007','P002',400,30,TO_DATE('2020/06/21')); --<이렇게 추가하면 
SELECT W_PRICE, Q_QTY,TO_CHAR(SYSDATE,'YYYY')||TO_CHAR(W_DATE,'WW') AS W_WW FROM WAREHOUSING; --<같은날짜가 2개가 뜬다. 그럼 

SELECT SUM(W_PRICE) AS PP, SUM(Q_QTY) AS TQ
,TO_CHAR(SYSDATE,'YYYY')||TO_CHAR(W_DATE,'WW') AS W_WW 
FROM WAREHOUSING
GROUP BY TO_CHAR(SYSDATE,'YYYY')||TO_CHAR(W_DATE,'WW')
; --<사실 이렇게 해야지 같은날짜에 들어온것도 처리된다. 
---------------------------------------------------------------------------------------------
SELECT *
FROM
(
SELECT WW FROM
(
    SELECT TO_CHAR(SYSDATE,'YYYY') || TO_CHAR(ADD_MONTHS(SYSDATE,-3) + LEVEL,'WW') AS WW
    FROM DUAL
    CONNECT BY LEVEL <=
    (SYSDATE - ADD_MONTHS(SYSDATE,-3))
    ) GROUP BY WW
)A
,
(
SELECT W_PRICE, Q_QTY,TO_CHAR(SYSDATE,'YYYY')||TO_CHAR(W_DATE,'WW') AS W_WW FROM WAREHOUSING
)B
WHERE A.WW = B.W_WW(+)
ORDER BY A.WW ASC
;

SELECT * FROM WAR


------1대 다 관계에서 1에서 원하는 컬럼전체가 PRIMARY 키가 아니면 서울전체를 GROUP BY 로 빼서 조인해서 계산해야 한다.
즉  지역            
    서울          서울 1
    부산          서울 2
    대구          부산 3
    울산          부산 4
    창원          부산 2
    광주          광주 3
    서울          광주 2 


-------------------------------------------------------------------------------
--------------REPLACE----------------------
SELECT REPLACE('12##$$','#','--')FROM DUAL;
SELECT REPLACE('1-2-3-4-5','-','')FROM DUAL;


SELECT LPAD('   21',6,'*') FROM DUAL; 

--------LAST_DAY
SELECT LAST_DAY(SYSDATE) FROM DUAL;

--------NEXT_DAY
SELECT NEXT_DAY(SYSDATE,1) FROM DUAL;
SELECT  NEXT_DAY(SYSDATE+7,'일') FROM DUAL; --??굳이 안써도 될듯

--------날짜함수에서의 ROUND, TRUNC 
--오늘부터 2020년 6월 11일까지의 날짜 차이
SELECT SYSDATE - TO_DATE('2020-06-11') FROM DUAL;   --9.47737
SELECT ROUND(SYSDATE - TO_DATE('2020-06-11')) FROM DUAL; --9
SELECT TO_CHAR(ROUND(SYSDATE),'YY-MM-DD HH:MI:SS') FROM DUAL; --20-06-20 12:00:00
SELECT TRUNC(12.456,1) FROM DUAL; --버리기 

--MONTHS_BETWEEN
SELECT MONTHS_BETWEEN(SYSDATE,TO_DATE('2020-05-23')) FROM DUAL; --거의 1이네..
SELECT MONTHS_BETWEEN(SYSDATE,TO_DATE('2020-05-20')) FROM DUAL; --이렇게 하면 오늘부터 한달전까지 1

SELECT TO_CHAR(ROUND(SYSDATE - TO_DATE('20/06/11', 'YY/MM/DD'), 0), 'YY/MM/DD HH:MI:SS') FROM DUAL;
SELECT ROUND(SYSDATE - TO_DATE('20/06/11', 'YY/MM/DD'),0) FROM DUAL;

-------------------------



--------------------
DB를 잘하면 
1.욕을 먹지않고
2.인정을 받는다.